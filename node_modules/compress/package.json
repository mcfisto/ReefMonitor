{
  "name": "compress",
  "description": "A streaming compression / gzip library for node.js",
  "version": "0.1.9",
  "author": {
    "name": "Rhys"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/waveto/node-compress.git"
  },
  "scripts": {
    "pre-install": "node-waf configure && node-waf"
  },
  "engine": [
    "node >=0.2.5"
  ],
  "main": "./build/default/compress",
  "readme": "node-compress\n=============\n\nA streaming compression / gzip module for node.js\n\nTo install, ensure that you have libz installed, and run:\n\nnode-waf configure \nnode-waf build\n\nThis will put the compress.node binary module in build/default. \n\n\nQuick example\n-------------\n\nvar compress=require(\"./compress\");\nvar sys=require(\"sys\");\nvar posix=require(\"posix\");\n\n// Create gzip stream\nvar gzip=new compress.Gzip;\ngzip.init();\n\n// Pump data to be compressed\nvar gzdata1 = gzip.deflate(\"My data that needs \", \"binary\"); \nsys.puts(\"Compressed size : \"+gzdata1.length);\n\nvar gzdata2 = gzip.deflate(\"to be compressed. 01234567890.\", \"binary\"); \nsys.puts(\"Compressed size : \"+gzdata2.length);\n\nvar gzdata3 = gzip.end();\nsys.puts(\"Last bit : \"+gzdata3.length);\n\n// Normally stream this out as its generated, but just print here\nvar gzdata = gzdata1+gzdata2+gzdata3;\nsys.puts(\"Total compressed size : \"+gzdata.length);\n",
  "readmeFilename": "README",
  "bugs": {
    "url": "https://github.com/waveto/node-compress/issues"
  },
  "homepage": "https://github.com/waveto/node-compress",
  "_id": "compress@0.1.9",
  "dist": {
    "shasum": "6393abed9f3c1be3ee479818aa605eed025eb534"
  },
  "_from": "compress@",
  "_resolved": "http://registry.npmjs.org/compress/-/compress-0.1.9.tgz"
}
